【左移】
将一个运算对象的各二进制位左移若干位

若左移时舍弃的高位不包含1，则每左移一位，该对象乘以2  11<<2 为44
在java中11默认是int类型32位 所以是 00000000 00000000 00000000 00001011<<2 为10 1100
即2⑸+23+22= 32+8+4 = 44
若最高位被挤掉则不能用乘以2求，要由二进制分析

【而-14<<2】

0000 1110原码
1111 0010补码
左移两位则 1100 1000

求真值 补码取反再加一得真值的正值 0011 0111――》0011 1000 
           或者减一得反码再取反得真值的正值
然后转成十进制，补上符号  32+16+8=56 ，即-56


【右移】
将一个运算对象的各二进制位右移若干位

正数左补0 负数左补1  右边丢弃

操作数每右移移位 相当于该数除以2


eg.4 >> 2  = 1
   -14(1111 0010) >> 2 = -4(1111 1100)(真值由该补码1111 1100转换)

【无符号右移】
各个位向右移 指定的位数 右移后空出来的位用零来填充 
移出右边的位被丢弃
eg. -14 >>> 2

	-14(1111 1111 1111 1111 1111 1111 1111 0010) >>>2
	= (00 1111 1111 1111 1111 1111 1111 1111 00)